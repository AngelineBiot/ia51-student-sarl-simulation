/* 
 * $Id$
 * 
 * Copyright (c) 2011-17 Stephane GALLAND <stephane.galland@utbm.fr>.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * This program is free software; you can redistribute it and/or modify
 */
package fr.utbm.info.ia51.labwork4.environment

import fr.utbm.info.ia51.framework.environment.SituatedObject
import fr.utbm.info.ia51.framework.environment.SpatialDataStructure
import fr.utbm.info.ia51.framework.environment.WorldModelState
import java.io.ByteArrayInputStream
import java.io.ByteArrayOutputStream
import java.io.ObjectInputStream
import java.io.ObjectOutputStream

/**
 * State of the world model.  
 * 
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 * @version $Name$ $Revision$ $Date$
 */
class ExtendedWorldModelState extends WorldModelState {

	val dataStructure : SpatialDataStructure<SituatedObject>
	
	/**
	 * @param environment
	 */
	new (environment : WorldModel) {
		super(environment)
		// Clone through serialization for using native cloning features
		var array : byte[]
		var baos = new ByteArrayOutputStream
		try {
			var oos = new ObjectOutputStream(baos)
			oos.writeObject(environment.spatialDataStructure)
			baos.flush
			array = baos.toByteArray
		} finally {
			baos.close
		}
		var bais = new ByteArrayInputStream(array)
		try {
			var ois = new ObjectInputStream(bais) 
			this.dataStructure = ois.readObject as SpatialDataStructure<SituatedObject>
		} finally {
			bais.close
		}
	}
	
	/** Replies the spatial data-structure.
	 * 
	 * @return the spatial data-structure.
	 */
	def getSpatialDataStructure : SpatialDataStructure<SituatedObject> {
		this.dataStructure
	}

}